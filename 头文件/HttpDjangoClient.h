//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class APMCache, DjangoTokenManager, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString;

@interface HttpDjangoClient : NSObject
{
    struct __SCNetworkReachability *ApiHostReachRef;
    int _maxUploadConcurrentCount;
    int _chunkRetryCount;
    NSString *_appKey;
    NSString *_uid;
    NSString *_acl;
    NSMutableDictionary *_APIVersionDict;
    NSString *_uuid;
    id _reachObserver;
    NSOperationQueue *_eventQueue;
    NSOperationQueue *_uploadQueue;
    NSOperationQueue *_downloadQueue;
    NSOperationQueue *_thumbnailQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    DjangoTokenManager *_tokenManager;
    CDUnknownBlockType _uploadProcessiveBlock;
    CDUnknownBlockType _downloadProcessiveBlock;
    unsigned long long _uploadChannel;
    APMCache *_uuidCache;
}

+ (id)JSONDictWithData:(id)arg1 error:(id *)arg2;
+ (id)shareInstance;
@property(retain, nonatomic) APMCache *uuidCache; // @synthesize uuidCache=_uuidCache;
@property(nonatomic) unsigned long long uploadChannel; // @synthesize uploadChannel=_uploadChannel;
@property(copy, nonatomic) CDUnknownBlockType downloadProcessiveBlock; // @synthesize downloadProcessiveBlock=_downloadProcessiveBlock;
@property(copy, nonatomic) CDUnknownBlockType uploadProcessiveBlock; // @synthesize uploadProcessiveBlock=_uploadProcessiveBlock;
@property(retain, nonatomic) DjangoTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(nonatomic) int chunkRetryCount; // @synthesize chunkRetryCount=_chunkRetryCount;
@property(nonatomic) int maxUploadConcurrentCount; // @synthesize maxUploadConcurrentCount=_maxUploadConcurrentCount;
@property(retain, nonatomic) NSOperationQueue *thumbnailQueue; // @synthesize thumbnailQueue=_thumbnailQueue;
@property(retain, nonatomic) NSOperationQueue *downloadQueue; // @synthesize downloadQueue=_downloadQueue;
@property(retain, nonatomic) NSOperationQueue *uploadQueue; // @synthesize uploadQueue=_uploadQueue;
@property(retain, nonatomic) NSOperationQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(nonatomic) __weak id reachObserver; // @synthesize reachObserver=_reachObserver;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSMutableDictionary *APIVersionDict; // @synthesize APIVersionDict=_APIVersionDict;
@property(copy, nonatomic) NSString *acl; // @synthesize acl=_acl;
@property(copy, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(copy, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
- (void).cxx_destruct;
- (id)getDjangoCodeFromRepsonse:(id)arg1 responseObject:(id)arg2 error:(id)arg3;
- (id)getDjangoCodeFromOperation:(id)arg1 error:(id)arg2;
- (id)parametersWithACLPrefix:(id)arg1 usedForH5:(_Bool)arg2;
- (void)setupWithConfig:(id)arg1;
- (id)getVideoURLWithId:(id)arg1;
- (id)getThumbnailURLWithId:(id)arg1 zoom:(id)arg2;
- (void)uploadRangeFileWithMd5:(id)arg1 data:(id)arg2 filePath:(id)arg3 fileName:(id)arg4 segInfo:(id)arg5 taskRecord:(id)arg6 progress:(CDUnknownBlockType)arg7 success:(CDUnknownBlockType)arg8 fail:(CDUnknownBlockType)arg9;
- (void)uploadSegmentData:(id)arg1 md5:(id)arg2 fileName:(id)arg3 range:(struct _NSRange)arg4 totalLength:(long long)arg5 taskRecord:(id)arg6 progress:(CDUnknownBlockType)arg7 success:(CDUnknownBlockType)arg8 fail:(CDUnknownBlockType)arg9;
- (void)generalWaterMarkWithId:(id)arg1 sourceId:(id)arg2 zoom:(id)arg3 position:(id)arg4 transparency:(id)arg5 width:(id)arg6 height:(id)arg7 xgap:(id)arg8 ygap:(id)arg9 pScale:(id)arg10 taskRecord:(id)arg11 progress:(CDUnknownBlockType)arg12 success:(CDUnknownBlockType)arg13 fail:(CDUnknownBlockType)arg14;
- (void)getWaterMarkWithId:(id)arg1 sourceId:(id)arg2 zoom:(id)arg3 position:(id)arg4 transparency:(id)arg5 width:(id)arg6 height:(id)arg7 xgap:(id)arg8 ygap:(id)arg9 pScale:(id)arg10 taskRecord:(id)arg11 progress:(CDUnknownBlockType)arg12 success:(CDUnknownBlockType)arg13 fail:(CDUnknownBlockType)arg14;
- (void)uploadOfflineFileWithUrl:(id)arg1 success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3;
- (void)queryFileWithMd5:(id)arg1 isSession:(_Bool)arg2 ext:(id)arg3 version:(id)arg4 success:(CDUnknownBlockType)arg5 fail:(CDUnknownBlockType)arg6;
- (void)getTokenWithAppKey:(id)arg1 success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3;
- (void)checkTokenWithSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)getThumbnailWithId:(id)arg1 zoom:(id)arg2 taskRecord:(id)arg3 source:(id)arg4 progress:(CDUnknownBlockType)arg5 success:(CDUnknownBlockType)arg6 fail:(CDUnknownBlockType)arg7;
- (void)getFileMetaWithId:(id)arg1 success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3;
- (void)downloadFileWithId:(id)arg1 destination:(id)arg2 taskRecord:(id)arg3 progress:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 fail:(CDUnknownBlockType)arg6;
- (void)deleteFileWithIds:(id)arg1 taskRecord:(id)arg2 success:(CDUnknownBlockType)arg3 fail:(CDUnknownBlockType)arg4;
- (void)uploadSmallFileWithPath:(id)arg1 fileName:(id)arg2 md5:(id)arg3 data:(id)arg4 taskRecord:(id)arg5 progress:(CDUnknownBlockType)arg6 success:(CDUnknownBlockType)arg7 fail:(CDUnknownBlockType)arg8;
- (_Bool)cloudConfigUploadSelectChannel;
- (void)uploadSequentialStream:(id)arg1 taskRecord:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 fail:(CDUnknownBlockType)arg5;
- (void)queryUploadFileWithPath:(id)arg1 data:(id)arg2 md5:(id)arg3 query:(_Bool)arg4 taskRecord:(id)arg5 progress:(CDUnknownBlockType)arg6 success:(CDUnknownBlockType)arg7 fail:(CDUnknownBlockType)arg8;
- (void)updateTokenByError;
- (void)initToken;
- (id)HTTPRequestOperationWithRequest:(id)arg1 progress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GetAFHTTPRequestOperationManager;
- (void)dealloc;
- (id)getUUid;
- (id)initWithConfig:(id)arg1;

@end

