//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDate, NSMutableDictionary;

@interface VISZClientDataManager : NSObject
{
    _Bool _disableLocationService;
    _Bool _hasFetched;
    _Bool _classifyResult;
    _Bool _didCallBack;
    double _timeoutInterval;
    double _minCallBackInterVal;
    NSMutableDictionary *_deviceValue;
    NSMutableDictionary *_networkValue;
    NSMutableDictionary *_positionValue;
    CDUnknownBlockType _handler;
    NSDate *_startFetchingDate;
}

@property(nonatomic) _Bool didCallBack; // @synthesize didCallBack=_didCallBack;
@property(retain, nonatomic) NSDate *startFetchingDate; // @synthesize startFetchingDate=_startFetchingDate;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) _Bool classifyResult; // @synthesize classifyResult=_classifyResult;
@property(nonatomic) _Bool hasFetched; // @synthesize hasFetched=_hasFetched;
@property(retain, nonatomic) NSMutableDictionary *positionValue; // @synthesize positionValue=_positionValue;
@property(retain, nonatomic) NSMutableDictionary *networkValue; // @synthesize networkValue=_networkValue;
@property(retain, nonatomic) NSMutableDictionary *deviceValue; // @synthesize deviceValue=_deviceValue;
@property(nonatomic) _Bool disableLocationService; // @synthesize disableLocationService=_disableLocationService;
@property(nonatomic) double minCallBackInterVal; // @synthesize minCallBackInterVal=_minCallBackInterVal;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
- (void).cxx_destruct;
- (void)dealloc;
- (void)configResultData;
- (void)fillInitEnvData:(id)arg1;
- (void)timeoutHandler;
- (void)configResultWithInterval:(double)arg1;
- (void)callbackAfterGetLocation;
- (void)fillData;
- (id)envData;
- (void)startFetchingClientDataOnThread:(id)arg1 classifyResult:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startFetchingClientDataOnThread:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startFetchingSimpleClientDataCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startFetchingClientDataCompletionHandler:(CDUnknownBlockType)arg1;
- (id)init;

@end

